type User {
  id: ID!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  loginSecret: String
  hostings: [Post!]!
  reservations: [Reservation!]!
  likes: [Like!]!
  comments: [Comment!]!
  createdAt: String!
  updatedAt: String!
}

type Post {
  id: ID!
  thumbNail: String!
  caption: String!
  location: String!
  host: User!
  likes: [Like!]!
  comments: [Comment!]!
  maxPeopleCount: Int!
  checkIn: String!
  checkOut: String!
  price: String!
  createdAt: String!
  updatedAt: String!
}

type Reservation {
  id: ID!
  post: Post!
  user: User!
  createdAt: String!
  updatedAt: String!
}

type Like {
  id: ID!
  post: Post!
  user: User!
  createdAt: String!
  updatedAt: String!
}

type Comment {
  id: ID!
  text: String!
  post: Post!
  user: User!
  createdAt: String!
  updatedAt: String!
}

type ConfirmSecretResponse {
  ok: Boolean!
  error: String
  token: String
}

type Mutation {
  confirmSecret(email: String!, loginSecret: String!): ConfirmSecretResponse!
  createAccount(username: String!, email: String!, firstName: String!, lastName: String!): CreateAccountResponse!
  requestSecret(email: String!): RequestSecretResponse!
}

type CreateAccountResponse {
  ok: Boolean!
  error: String
}

type Query {
  something: Boolean!
}

type RequestSecretResponse {
  ok: Boolean!
  error: String
}
